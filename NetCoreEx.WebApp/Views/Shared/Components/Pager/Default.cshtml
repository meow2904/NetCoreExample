@model PagedResultBase
@{
    var urlTemplate = Url.Action() + "?page={0}";
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "page")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }
    while (urlTemplate.Contains("//"))
    {
        urlTemplate = urlTemplate.Replace("//", "/");
    }
    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}

<div class="col-sm-12 col-md-5 d-flex align-items-center justify-content-center justify-content-md-start pt-4">
    <div class="dataTables_info" role="status" aria-live="polite">Từ @((Model.CurrentPage-1)*Model.PageSize+1) đến @(Model.CurrentPage*Model.PageSize) của @Model.RowCount bản ghi</div>
</div>
<div class="col-sm-12 col-md-7 d-flex align-items-center justify-content-center justify-content-md-end pt-4">
    <div class="dataTables_paginate paging_simple_numbers">
        <ul class="pagination">
            @if (Model.CurrentPage == startIndex)
            {
                <li class="paginate_button page-item previous disabled">
                    <a href="javascript:void(0)" class="page-link">
                        <i class="previous"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="paginate_button page-item previous">
                    <a href="@urlTemplate.Replace("{0}", "1")" class="page-link">
                        <i class="previous"></i>
                    </a>
                </li>
            }
            @for (var i = Model.FirstRowOnPage; i <= Model.LastRowOnPage; i++)
            {
                if (i == Model.CurrentPage)
                {
                    <li class="paginate_button page-item active">
                        <a href="javascript:void(0)" class="page-link">@i</a>
                    </li>
                }
                else
                {
                    <li class="paginate_button page-item">
                        <a href="@urlTemplate.Replace("{0}", i.ToString())" class="page-link">@i</a>
                    </li>
                }
            }
            @if (Model.CurrentPage == finishIndex)

            {
                <li class="paginate_button page-item next disabled">
                    <a class="page-link">
                        <i class="next"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="paginate_button page-item next">
                    <a href="@urlTemplate.Replace("{0}", Model.PageCount.ToString())" class="page-link">
                        <i class="next"></i>
                    </a>
                </li>
            }
        </ul>
    </div>
</div>